function Cabinet() {
    console.log('üîß Cabinet –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω');

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    const [loginData, setLoginData] = React.useState({
        username: '',
        password: ''
    });
    const [isLoading, setIsLoading] = React.useState(false);

    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', loginData);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    const handleInputChange = (field, value) => {
        console.log('üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—è:', field, value);
        setLoginData(prev => ({
            ...prev,
            [field]: value
        }));
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    const handleLogin = async (e) => {
        e.preventDefault();

        console.log('üîÑ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥–∞', loginData);

        if (!loginData.username || !loginData.password) {
            console.log('‚ùå –ü—É—Å—Ç—ã–µ –ø–æ–ª—è');
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }

        setIsLoading(true);
        console.log('‚è≥ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω isLoading:', true);

        try {
            console.log('üì® –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /api/login...');
            const response = await fetch('/api/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username: loginData.username,
                    password: loginData.password
                })
            });

            console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
            const data = await response.json();
            console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);

            if (data.success) {
                console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞:', data.redirect_url);
                alert('‚úÖ ' + data.message);
                // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–∞–±–∏–Ω–µ—Ç
                window.location.href = data.redirect_url;
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', data.message);
                alert('‚ùå ' + data.message);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ fetch:', error);
            alert('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å–∏—Å—Ç–µ–º—É');
        } finally {
            setIsLoading(false);
            console.log('‚è≥ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω isLoading:', false);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter
    const handleKeyPress = (e) => {
        console.log('‚å®Ô∏è –ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞:', e.key);
        if (e.key === 'Enter') {
            handleLogin(e);
        }
    };

    console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');

    return (
        <div className="container">
            {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é */}
            <nav className="navbar">
                <div className="nav-brand">
                    <span>üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</span>
                </div>
                <ul className="nav-menu">
                    <li><a href="/">–ì–ª–∞–≤–Ω–∞—è</a></li>
                    <li><a href="#login">–í—Ö–æ–¥</a></li>
                </ul>
            </nav>

            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <header className="header" id="login">
                <div className="header-info">
                    <h1>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
                    <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏–µ–º</h2>
                    <p className="subtitle">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–Ω—è—Ç–∏—è</p>

                    {/* –ë–ª–æ–∫ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ */}
                    <div className="test-accounts">
                        <h3>–¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:</h3>
                        <div className="account-list">
                            <div className="account-item">
                                <strong>–†–µ–ø–µ—Ç–∏—Ç–æ—Ä:</strong> –ª–æ–≥–∏–Ω <code>tutor</code>, –ø–∞—Ä–æ–ª—å <code>tutor</code>
                            </div>
                            <div className="account-item">
                                <strong>–£—á–µ–Ω–∏–∫:</strong> —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º
                            </div>
                        </div>
                    </div>
                </div>
            </header>

            {/* –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ */}
            <section className="login-section">
                <h2>üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
                <div className="login-container">
                    <form className="login-form" onSubmit={handleLogin}>
                        <div className="form-group">
                            <label>–õ–æ–≥–∏–Ω:</label>
                            <input
                                type="text"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω"
                                value={loginData.username}
                                onChange={(e) => handleInputChange('username', e.target.value)}
                                onKeyPress={handleKeyPress}
                                disabled={isLoading}
                            />
                        </div>
                        <div className="form-group">
                            <label>–ü–∞—Ä–æ–ª—å:</label>
                            <input
                                type="password"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                                value={loginData.password}
                                onChange={(e) => handleInputChange('password', e.target.value)}
                                onKeyPress={handleKeyPress}
                                disabled={isLoading}
                            />
                        </div>
                        <button
                            type="submit"
                            className="login-btn"
                            disabled={isLoading}
                        >
                            {isLoading ? '‚è≥ –í—Ö–æ–¥...' : 'üîê –í–æ–π—Ç–∏'}
                        </button>
                        <div className="login-links">
                            <a href="#" className="forgot-password">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</a>
                        </div>
                    </form>
                </div>
            </section>
        </div>
    );
}

console.log('üìÅ Cabinet.js –∑–∞–≥—Ä—É–∂–µ–Ω');